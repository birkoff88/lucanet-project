- name: Bootstrap EC2, deploy services, and enable backups
  hosts: ec2
  become: yes

  vars:
    app_dir: /opt/lucanet
    backup_bucket: "lucanet-demo-birkoff88-tf"   
    pg_user: lucanet
    pg_password: changeMe123
    pg_db: finance
    enable_backup_cron: true                 # toggle cron on/off

  tasks:
    # ---------- Base OS ----------
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install base packages
      apt:
        name:
          - curl
          - unzip
          - ufw
          - unattended-upgrades
          - docker.io
          - logrotate
          - cron
        state: present

    - name: Ensure docker service is enabled and running
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Enable automatic security updates
      command: dpkg-reconfigure -f noninteractive unattended-upgrades

    # ---------- Firewall (UFW) ----------
    - name: Allow SSH (22/tcp)
      ufw:
        rule: allow
        port: "22"
        proto: tcp

    - name: Allow WireGuard (51820/udp)
      ufw:
        rule: allow
        port: "51820"
        proto: udp

    - name: Enable UFW with default deny incoming
      ufw:
        state: enabled
        policy: deny

    # ---------- AWS CLI v2 ----------
    - name: Check if AWS CLI v2 is installed
      stat:
        path: /usr/local/bin/aws
      register: awscli_bin

    - name: Download AWS CLI v2
      get_url:
        url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        dest: /tmp/awscliv2.zip
        mode: "0644"
      when: not awscli_bin.stat.exists

    - name: Unzip AWS CLI v2
      unarchive:
        src: /tmp/awscliv2.zip
        dest: /tmp/
        remote_src: yes
      when: not awscli_bin.stat.exists

    - name: Install AWS CLI v2
      command: /tmp/aws/install
      args:
        creates: /usr/local/bin/aws
      when: not awscli_bin.stat.exists

    # ---------- Docker Compose v2 (CLI plugin) ----------
    - name: Ensure docker CLI plugins dir exists
      file:
        path: /usr/local/lib/docker/cli-plugins
        state: directory
        mode: "0755"

    - name: Install docker compose v2 binary
      get_url:
        url: https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64
        dest: /usr/local/lib/docker/cli-plugins/docker-compose
        mode: "0755"

    # ---------- App deploy (Compose) ----------
    - name: Create app directory
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: "0755"

    - name: Ensure data directories exist
      file:
        path: "{{ item.path }}"
        state: directory
        mode: "{{ item.mode | default('0755') }}"
        owner: "{{ item.owner | default(omit) }}"
        group: "{{ item.group | default(omit) }}"
        recurse: "{{ item.recurse | default(false) }}"
      loop:
        - { path: "{{ app_dir }}/postgres-data" }
        - { path: "{{ app_dir }}/grafana-data", owner: "472", group: "472", recurse: true }  # Grafana runs as uid 472

    - name: Drop docker-compose.yml (templated)
      template:
        src: templates/docker-compose.yml.j2
        dest: "{{ app_dir }}/docker-compose.yml"
        mode: "0644"

    - name: Start services with Docker Compose
      shell: docker compose up -d
      args:
        chdir: "{{ app_dir }}"

    # ---------- Backup script + cron + logrotate ----------
    - name: Install backup script (pg_dump -> S3)
      template:
        src: templates/backup.sh.j2
        dest: /usr/local/bin/lucanet-backup.sh
        mode: "0750"

    - name: Ensure cron service running
      systemd:
        name: cron
        state: started
        enabled: yes

    - name: Install nightly cron for DB backup (02:00)
      copy:
        dest: /etc/cron.d/lucanet-backup
        mode: "0644"
        content: |
          # m h dom mon dow user  command
          0 2 * * * root /usr/local/bin/lucanet-backup.sh > /var/log/lucanet-backup.log 2>&1
      when: enable_backup_cron | bool

    - name: Remove cron file if disabled
      file:
        path: /etc/cron.d/lucanet-backup
        state: absent
      when: not enable_backup_cron | bool

    - name: Logrotate config for backup log
      copy:
        dest: /etc/logrotate.d/lucanet-backup
        mode: "0644"
        content: |
          /var/log/lucanet-backup.log {
              weekly
              rotate 4
              compress
              missingok
              notifempty
              create 0640 root root
          }

    # ---------- Sanity checks (non-fatal) ----------
    - name: Show docker version
      command: docker --version
      register: docker_ver
      changed_when: false

    - name: Show compose version
      command: docker compose version
      register: compose_ver
      changed_when: false

    - name: Print versions
      debug:
        msg:
          - "{{ docker_ver.stdout | default('docker ?') }}"
          - "{{ compose_ver.stdout | default('compose ?') }}"
